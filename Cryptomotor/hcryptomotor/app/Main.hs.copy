module Main where

import qualified MyLib                        (someFunc)
import RIO
import qualified Data.Text.IO                 as T
import qualified Crypto.Curve25519.Exceptions as Curve
import qualified Crypto.Random                as Random

main :: IO ()
main = do
  T.putStrLn "Hello, Haskell!"
  MyLib.someFunc
  g <- Random.newGenIO
  let keypair = Curve.generateKeyPair g
  let privatekeytext = displaykey keypair
  T.putStrLn privatekeytext


displaykey :: Random.CryptoRandomGen g => (Curve.PrivateKey, Curve.PublicKey, g) -> String
displaykey (private public g) = show private
